DECLARE
    --
    P_SCHEMA_NAME          VARCHAR2(100) := 'DB_GIM_ATP_SCM';
    P_TABLE_NAME           VARCHAR2(100) := 'STG_SCM_EDI_LOGS';
    P_VERSION              VARCHAR2(100) := 'COMPATIBLE';
    
    --
    CURSOR TABLE_INDEX (
        P_TABLE_NAME  ALL_INDEXES.TABLE_NAME%TYPE
       ,P_SCHEMA_NAME ALL_INDEXES.TABLE_OWNER%TYPE
    ) IS
    SELECT
        INDEX_NAME
    FROM
        ALL_INDEXES
    WHERE
            TABLE_OWNER = P_SCHEMA_NAME
        AND TABLE_NAME = P_TABLE_NAME
        AND STATUS = 'VALID';

    CURSOR TABLE_TRIGGER (
        P_TABLE_NAME  ALL_TRIGGERS.TABLE_NAME%TYPE
       ,P_SCHEMA_NAME ALL_TRIGGERS.TABLE_OWNER%TYPE
    ) IS
    SELECT
        TRIGGER_NAME
    FROM
        ALL_TRIGGERS
    WHERE
            TABLE_OWNER = P_SCHEMA_NAME
        AND TABLE_NAME = P_TABLE_NAME;
    --
    V_QUERY_TABLE          CLOB;
    V_QUERY_TABLE_COMMENTS CLOB;
    V_QUERY_INDEX          CLOB;
    V_QUERY_TRIGGER        CLOB;
    V_QUERY_CONSTRAINT     CLOB;
    V_QUERY_REF_CONSTRAINT CLOB;
BEGIN
    BEGIN
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'SEGMENT_ATTRIBUTES',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'PARTITIONING',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'TABLESPACE',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'SQLTERMINATOR',TRUE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'PRETTY',TRUE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'SIZE_BYTE_KEYWORD',TRUE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'FORCE',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'EMIT_SCHEMA',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'CONSTRAINTS',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'REF_CONSTRAINTS',FALSE);
        DBMS_METADATA.SET_TRANSFORM_PARAM(DBMS_METADATA.SESSION_TRANSFORM,'CONSTRAINTS_AS_ALTER',FALSE);
    END;

    BEGIN
        V_QUERY_TABLE := DBMS_METADATA.GET_DDL('TABLE',P_TABLE_NAME,P_SCHEMA_NAME,P_VERSION);
        DBMS_OUTPUT.PUT_LINE(V_QUERY_TABLE);
    EXCEPTION
        WHEN OTHERS THEN
            V_QUERY_TABLE := NULL;
    END;

    BEGIN
        V_QUERY_TABLE_COMMENTS := DBMS_METADATA.GET_DEPENDENT_DDL('COMMENT',P_TABLE_NAME,P_SCHEMA_NAME,P_VERSION);
        DBMS_OUTPUT.PUT_LINE(V_QUERY_TABLE_COMMENTS);
    EXCEPTION
        WHEN OTHERS THEN
            V_QUERY_TABLE_COMMENTS := NULL;
    END;

    BEGIN
        FOR IND IN TABLE_INDEX(P_TABLE_NAME,P_SCHEMA_NAME) LOOP
            V_QUERY_INDEX := V_QUERY_INDEX
                             || DBMS_METADATA.GET_DDL('INDEX',IND.INDEX_NAME,P_SCHEMA_NAME,P_VERSION);
        END LOOP;

        DBMS_OUTPUT.PUT_LINE(V_QUERY_INDEX);
    EXCEPTION
        WHEN OTHERS THEN
            V_QUERY_INDEX := NULL;
    END;

    BEGIN
        FOR TRG IN TABLE_TRIGGER(P_TABLE_NAME,P_SCHEMA_NAME) LOOP
            V_QUERY_TRIGGER := V_QUERY_TRIGGER
                               || DBMS_METADATA.GET_DDL('TRIGGER',TRG.TRIGGER_NAME,P_SCHEMA_NAME,P_VERSION);
        END LOOP;

        DBMS_OUTPUT.PUT_LINE(V_QUERY_TRIGGER);
    EXCEPTION
        WHEN OTHERS THEN
            V_QUERY_TRIGGER := NULL;
    END;

    BEGIN
        V_QUERY_CONSTRAINT := DBMS_METADATA.GET_DEPENDENT_DDL('CONSTRAINT',P_TABLE_NAME,P_SCHEMA_NAME,P_VERSION);
        DBMS_OUTPUT.PUT_LINE(V_QUERY_CONSTRAINT);
    EXCEPTION
        WHEN OTHERS THEN
            V_QUERY_CONSTRAINT := NULL;
    END;

    BEGIN
        V_QUERY_REF_CONSTRAINT := DBMS_METADATA.GET_DEPENDENT_DDL('REF_CONSTRAINT',P_TABLE_NAME,P_SCHEMA_NAME,P_VERSION);
        DBMS_OUTPUT.PUT_LINE(V_QUERY_CONSTRAINT);
    EXCEPTION
        WHEN OTHERS THEN
            V_QUERY_REF_CONSTRAINT := NULL;
    END;

END;
